public class sudoku_Solver {
	 public static boolean isValid(int[][] board, int row, int col, int num) {
	        // Check if the number already exists in the row or column
	        for (int i = 0; i < 9; i++) {
	            if (board[row][i] == num || board[i][col] == num) {
	                return false;
	            }
	        }

	        // Check if the number exists in the 3x3 sub-grid
	        int startRow = row - row % 3;
	        int startCol = col - col % 3;
	        for (int i = 0; i < 3; i++) {
	            for (int j = 0; j < 3; j++) {
	                if (board[i + startRow][j + startCol] == num) {
	                    return false;
	                }
	            }
	        }

	        return true;
	    }

	    public static boolean solveSudoku(int[][] board) {
	        for (int i = 0; i < 9; i++) {
	            for (int j = 0; j < 9; j++) {
	                if (board[i][j] == 0) {
	                    for (int num = 1; num <= 9; num++) {
	                        if (isValid(board, i, j, num)) {
	                            board[i][j] = num;
	                            if (solveSudoku(board)) {
	                                return true;
	                            }
	                            board[i][j] = 0;
	                        }
	                    }
	                    return false;
	                }
	            }
	        }
	        return true;
	    }

	    public static void printBoard(int[][] board) {
	        for (int i = 0; i < 9; i++) {
	            if (i % 3 == 0 && i != 0) {
	                System.out.println("- - - - - - - - - - -");
	            }
	            for (int j = 0; j < 9; j++) {
	                if (j % 3 == 0 && j != 0) {
	                    System.out.print("| ");
	                }
	                if (j == 8) {
	                    System.out.println(board[i][j]);
	                } else {
	                    System.out.print(board[i][j] + " ");
	                }
	            }
	        }
	    }

	    public static void main(String[] args) {
	        int[][] board = {
	            {5, 3, 0, 0, 7, 0, 0, 0, 2},
	            {6, 0, 0, 1, 9, 5, 0, 0, 0},
	            {0, 9, 8, 0, 0, 0, 0, 6, 0},
	            {8, 0, 0, 0, 6, 0, 0, 0, 3},
	            {4, 0, 0, 8, 0, 3, 0, 0, 1},
	            {7, 0, 0, 0, 2, 0, 0, 0, 6},
	            {0, 6, 0, 0, 0, 0, 2, 8, 0},
	            {0, 0, 0, 4, 1, 9, 0, 0, 5},
	            {0, 0, 0, 0, 8, 0, 0, 7, 9}
	        };

	        if (solveSudoku(board)) {
	            printBoard(board);
	        } else {
	            System.out.println("No solution exists");
	        }
	    }
